NameSimple . Name ::= Simple_name;
NameOp . Name ::= Operator_symbol;
NameChar . Name ::= Character_literal;
NameSelected . Name ::= Selected_name;
NameIndexed . Name ::= Indexed_name;
NameSlice . Name ::= Slice_name;
NameAttr . Name ::= Attribute_name;

FunctionCallNyadic . Function_call ::= Name;
FunctionCallPolyadic . Function_call ::= Name "(" [Association_element] ")";

separator nonempty Association_element ",";
separator nonempty Expression ",";

AssocElementPositional . Association_element ::= Actual_part;
AssocElementNamedParam . Association_element ::= Name "=>" Actual_part;

ActualPartD . Actual_part ::= Actual_designator;
ActualFoo. Acutal_part ::= Name "(" Actual_designator ")";

ExpressionName . Expression ::= Name;
ExpressionNumber . Expression ::= Integer;

ExpressionDesignator . Actual_designator ::= Expression;
NameDesignator . Acutal_designator ::= Name;

NamePrefix . Prefix ::= Name;
FunctionPrefix . Prefix ::= Function_call;

SelectedName . Selected_name ::= Prefix "." Suffix;

AllSuffix . Suffix ::= "all";
AllSuffixfoo . Suffix ::= "foobar" "all";
NameSuffix . Suffix ::= Simple_name;

AttributeName . Attribute_name ::= Prefix "'" Name;

SliceName . Slice_name ::= Prefix "(" Expression ")";

IndexedName . Indexed_name ::= Prefix "(" [Expression] ")";

CharLiteral . Character_literal ::= "'" Char "'";


GraphicChar . Graphic_character ::= Char;
OperatorSymbol . Operator_symbol ::= String;
SimpleName . Simple_name ::= Identifier;

token Decimal_Literal ('d' 'u' 'm' 'm' 'y');

token Base_Spec ('B' | 'U' 'x');
